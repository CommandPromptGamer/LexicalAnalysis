128 Character string literal
129 UTF-8 string literal
130 wchar_t string literal
131 UTF-16 string literal
132 UTF-32 string literal
133
134
135
136
137
138
140 Header name <> begin
141 Header name <> end
142 Header name "" begin
143 Header name "" end
144
145
146
149
151 Character constant
152 UTF-8 character constant
153 wchar_t character constant
154 UTF-16 character constant
155 UTF-32 character constant
157 int constant
158 unsigned int constant
159 long int constant
160 unsigned long int constant
161 long long int constant
162 unsigned long long int constant
163 float constant
164 double constant
165 long double constant
166 _Decimal32 constant
167 _Decimal64 constant
168 _Decimal128 constant
169
171
172
173
175
176
177
178
179
180
181
182
183
184
185
187
188
189
190
191
192
193
194
196
198
199
200
201
202
204 if preprocessing directive
205 ifdef preprocessing directive
206 ifndef preprocessing directive
207 elif preprocessing directive
208 elifdef preprocessing directive
209 elifndef preprocessing directive
210 else preprocessing directive
211 endif preprocessing directive
212 include preprocessing directive
213 embed preprocessing directive
214 define preprocessing directive
215 undef preprocessing directive
216 line preprocessing directive
217 error preprocessing directive
218 warning preprocessing directive
219 pragma preprocessing directive
220
221
222
223
225
226
227
229
230
232
233
234
235
236
237
238
239
240
241
242
244
245
246
247
248
249
250
251
252
253
254
256
257
258
259
261
262
263
264
265
266
268
269
270
272
273
275
276
277
278
279
280
282
283
284
285
287
288
289
290
291
292
293
294
295
296
297
298
299
301
302
303
305
306
307
308
309
310
312
313
314
315
316
317
318
320
321
323
324
325
327
329
330
331
332
333
334
335
336
337
340
342
343
344
345
346
347
349
350
351
353
354
355
356
358
359
360
361
362
363
365
368
369
370
371
372
373
374
375
377
378
379
380
382
383
384
385
386
387
388
389
391
392
393
394
396
397
398
399
400
402
403
404
405
406
407
408
410
411
412
413
415
416
417
418
420
421
423
424
425
426
427
428
429
432
433
434
436
437
438
440
441
442
443
444
445
446
447
448
449
450
451
452
453
454
455
456
457
458
459
460
461
462
463
464
466
467
468
469
470
471
472
473
474
475
476
477
478
479
480
481
482
483
484
485
487
488
489
490
491
492
493
494
496
497
498
499
500
501
502
503
504
505
506
507
509
510
511
512
513
514
515
516
518
519
520
521
522
524
525
526
527
528
529
530
531
533
534
535
537
539
540
541
542
543
544
545
546
547
548
549
550
552
553
554
555
556
558
559
560
561
562
563
564
565
566
567
568
569
570
571
572
573
574
575
576
577
578
579
580
583
584
585
586
587
588
589
590
592
593
594
595
596
598
599
600
601
602
604
605
606
607
609
610
613
615
616
618
621
622
624
625
628
629
630
632
633
634
635
636
637
638
640
641
643
644
645
646
648
650
651
652
653
654
655
656
657
660
663
664
665
666
667
671
672
673
674
675
676
679
681
682
683
684
685
686
689
690
691
692
693
694
695
696
697
700
701
702
704
706
707
708
709
710
711
712
713
715
716
717
719
720
721
722
723
724
725
727
728
729
730
731
732
733
734
735
736
737
738
739
740
741
742
744
746